# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QC6qXLgSiq3NgNOUaN2jDlO_9Os3Ozfj
"""

# HERENCIA SIMPLE 

class Animal: 
    def __init__(self, nombre, velocidad, cobertura):
        self.nombre = nombre
        self.velocidad = velocidad
        self.cobertura = cobertura
    
    def saludar(self):
        print(f'Hola!! mi nombre es {self.nombre}')
    
    def desplazar(self, tiempo):
        distancia = self.velocidad * tiempo 
        print(f'La distancia recorrida es {distancia} kilometros')
# ESTA ES LA MAGIA DE LA HERECNIA SIMPLE
class Pajaro(Animal):
    pass

class Perro(Animal):
    pass

pajaro1 = Pajaro('Piolin',15,'Plumaje')
perro1 = Perro('Cachulooo',30,'Pelaje')
pajaro1.desplazar(3)
perro1.desplazar(2)

# HERENCIA MULTIPLE 

class PersonalUniversitario:
    tipo = 'Humano'

class Profesor(PersonalUniversitario):
    materia = 'Programcion'

    def dictar_clases(self):
        print('Dictando Clases...')

class Alumno(PersonalUniversitario):
    carrera = 'Informatica'
    semestres = 6
    materia = 'Modelamiento de base de datos...'

    def dar_examen(self):
        print('Rindiendo Examen')
# ESTA ES LA MAGIA DE LA HERENCIA MULTIPLE
class ProfesorAyudante(Alumno, Profesor):
    pass

ayudante1 = ProfesorAyudante()
ayudante1.carrera
# ME SIRVE PARA VER LOS METODOS QUE TIENE EL OBJETO O INSTANCIA 
dir(ayudante1)
# MRO SE UTILIZA PARA DAR PRIORIDAD A LA VARIABLE COMUN ENTRE CLASES
ProfesorAyudante.__mro__
ayudante1.materia



